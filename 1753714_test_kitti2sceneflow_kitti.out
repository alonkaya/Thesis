Wed 04 Dec 2024 10:31:52 IST

SLURM_JOBID:		 1753714
SLURM_JOB_NODELIST:	 cs-4090-10 


/home/alonkay/.conda/envs/alon_env/lib/python3.9/site-packages/transformers/utils/generic.py:260: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  torch.utils._pytree._register_pytree_node(
/home/alonkay/.conda/envs/alon_env/lib/python3.9/site-packages/huggingface_hub/file_download.py:797: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/alonkay/.conda/envs/alon_env/lib/python3.9/site-packages/transformers/modeling_utils.py:479: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(checkpoint_file, map_location=map_location)
Traceback (most recent call last):
  File "/cs_storage/alonkay/Thesis/PlayGround.py", line 749, in <module>
    test_trained()
  File "/cs_storage/alonkay/Thesis/PlayGround.py", line 742, in test_trained
    model = FMatrixRegressor(lr=LR[0], batch_size=1, L2_coeff=L2_COEFF, huber_coeff=HUBER_COEFF, trained_vit=TRAINED_VIT, frozen_layers=0, pretrained_path=pretrained_model).to(device)
  File "/cs_storage/alonkay/Thesis/FMatrixRegressor.py", line 93, in __init__
    self.load_model(path)
  File "/cs_storage/alonkay/Thesis/FMatrixRegressor.py", line 337, in load_model
    print_and_write(f"Model {model_path} not found", self.plots_path)
  File "/cs_storage/alonkay/Thesis/utils.py", line 185, in print_and_write
    os.makedirs(plots_path, exist_ok=True)
  File "/home/alonkay/.conda/envs/alon_env/lib/python3.9/os.py", line 210, in makedirs
    head, tail = path.split(name)
  File "/home/alonkay/.conda/envs/alon_env/lib/python3.9/posixpath.py", line 103, in split
    p = os.fspath(p)
TypeError: expected str, bytes or os.PathLike object, not NoneType

nohup: ignoring input
/home/alonkay/conda/alon/lib/python3.9/site-packages/transformers/utils/generic.py:260: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  torch.utils._pytree._register_pytree_node(
/home/alonkay/conda/alon/lib/python3.9/site-packages/huggingface_hub/file_download.py:1150: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/alonkay/conda/alon/lib/python3.9/site-packages/transformers/modeling_utils.py:479: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(checkpoint_file, map_location=map_location)
/home/alonkay/Thesis/FMatrixRegressor.py:323: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(model_path, map_location='cpu')
###########################################################################################################################################################

 learning rate: 0.0001, mlp_hidden_sizes: [1024, 512], jump_frames: 6, use_reconstruction_layer: True
batch_size: 8, norm: True, train_seqeunces: [0, 2, 3, 5], val_sequences: [6, 7, 8], RL_TEST_NAMES: ['fe2fadf89a84e92a', 'f01e8b6f8e10fdd9', 'f1ee9dc6135e5307', 'a41df4fa06fd391b', 'bc0ebb7482f14795', '9bdd34e784c04e3a', '98ebee1c36ecec55'], dataset: Stereo,
average embeddings: False, model: openai/clip-vit-base-patch32, augmentation: True, random crop: True, part: head, get_old_path: False,
RE1 coeff: 0 SED coeff: 0.5, ALG_COEFF: 0, L2_coeff: 1, huber_coeff: 1, frozen layers: 0, trained vit: plots/Affine/BS_32__lr_6e-05__train_size_9216__CLIP__alpha_10__conv__original_rotated/model.pth,
crop: 224 resize: 256, use conv: True pretrained: None, train_size: 0.05, norm_mean: tensor([0.4815, 0.4578, 0.4082], device='cuda:0'), norm_std: tensor([0.2686, 0.2613, 0.2758], device='cuda:0'), sched: None seed: 42, 


##### CONTINUE TRAINING #####


Epoch 10/5500: Training Loss: 1.9951665541704964		 Val Loss: 2.3710375246794326
             	Training MAE: 0.20435592532157898		 Val MAE: 0.20548415184020996
             	Algebraic dist: 66.44482421875		 Val Algebraic dist: 83.92357867697011
             	RE1 dist: 5381.651194852941		 Val RE1 dist: 7845.877038043478
             	SED dist: 3.716457591337316		 Val SED dist: 4.462218906568444


Epoch 11/5500: Training Loss: 1.9644099964815027		 Val Loss: 2.6423049595045005
             	Training MAE: 0.20111559331417084		 Val MAE: 0.20291100442409515
             	Algebraic dist: 64.37744858685662		 Val Algebraic dist: 87.51395847486413
             	RE1 dist: 5099.758272058823		 Val RE1 dist: 8587.932744565218
             	SED dist: 3.661563648897059		 Val SED dist: 5.011595684549083


Epoch 12/5500: Training Loss: 2.1164804346421184		 Val Loss: 2.5779772219450576
             	Training MAE: 0.20046040415763855		 Val MAE: 0.20244689285755157
             	Algebraic dist: 65.33302217371323		 Val Algebraic dist: 85.60115382982337
             	RE1 dist: 5283.810202205882		 Val RE1 dist: 7166.380434782609
             	SED dist: 3.9711442835190716		 Val SED dist: 4.881768268087636


Epoch 13/5500: Training Loss: 1.9031262117273666		 Val Loss: 2.7020049717115318
             	Training MAE: 0.20023536682128906		 Val MAE: 0.20474599301815033
             	Algebraic dist: 65.11346076516544		 Val Algebraic dist: 94.56236200747283
             	RE1 dist: 5134.382352941177		 Val RE1 dist: 10120.822010869566
             	SED dist: 3.541414373061236		 Val SED dist: 5.125403362771739


Epoch 14/5500: Training Loss: 1.9086750254911535		 Val Loss: 2.730739095936651
             	Training MAE: 0.20087061822414398		 Val MAE: 0.2039986550807953
             	Algebraic dist: 65.85093778722427		 Val Algebraic dist: 92.59474779211956
             	RE1 dist: 5305.415900735294		 Val RE1 dist: 9311.563858695652
             	SED dist: 3.549317752613741		 Val SED dist: 5.182986052139945


Fatal Python error: Illegal instruction

Thread 0x0000733c02a006c0 (most recent call first):
<no Python frame>

Current thread 0x0000733da2825580 (most recent call first):
  File "/home/alonkay/conda/alon/lib/python3.9/site-packages/torch/serialization.py", line 496 in __init__
  File "/home/alonkay/conda/alon/lib/python3.9/site-packages/torch/serialization.py", line 525 in _open_zipfile_writer
  File "/home/alonkay/conda/alon/lib/python3.9/site-packages/torch/serialization.py", line 651 in save
  File "/home/alonkay/Thesis/FMatrixRegressor.py", line 282 in save_model
  File "/home/alonkay/Thesis/FMatrixRegressor.py", line 229 in train_model
  File "/home/alonkay/Thesis/Main.py", line 96 in <module>

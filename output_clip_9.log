nohup: ignoring input
/home/alonkay/conda/alon/lib/python3.9/site-packages/transformers/utils/generic.py:260: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  torch.utils._pytree._register_pytree_node(
/home/alonkay/conda/alon/lib/python3.9/site-packages/huggingface_hub/file_download.py:1150: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/alonkay/conda/alon/lib/python3.9/site-packages/transformers/modeling_utils.py:479: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(checkpoint_file, map_location=map_location)
/home/alonkay/Thesis/FMatrixRegressor.py:348: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(model_path, map_location='cpu')
45117
Epoch trimmed seds: 3.176970958709717
Epoch trimmed seds: 3.1092960834503174
Epoch trimmed seds: 2.9410650730133057
Epoch trimmed seds: 3.066196918487549
Epoch trimmed seds: 3.0953402519226074
Epoch trimmed seds: 3.030036449432373
Epoch trimmed seds: 3.1583540439605713
Epoch trimmed seds: 3.076488494873047
Epoch trimmed seds: 3.1215507984161377
Epoch trimmed seds: 3.004655361175537


## TEST RESULTS: ##
Test Loss: 1.736500034084568		 Test MAE: 0.071912132948637
Test Algebraic dist: 1.0112746201552354
Test SED dist: 3.4303657036323054
Test RE1 dist: 1.1923454383751015

Test Algebraic dist truth: 0.004579071874742384
Test SED dist truth: 0.00016625623472712257
Test RE1 dist truth: 2.0786551395794015e-05

Mean Trimmed seds: 3.077995443344116

None


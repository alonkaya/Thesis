Thu 19 Dec 2024 18:08:43 IST

SLURM_JOBID:		 1980396
SLURM_JOB_NODELIST:	 ise-6000-01 


/home/alonkay/.conda/envs/alon_env/lib/python3.9/site-packages/transformers/utils/generic.py:260: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  torch.utils._pytree._register_pytree_node(
/home/alonkay/.conda/envs/alon_env/lib/python3.9/site-packages/huggingface_hub/file_download.py:797: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/alonkay/.conda/envs/alon_env/lib/python3.9/site-packages/transformers/modeling_utils.py:479: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(checkpoint_file, map_location=map_location)
/cs_storage/alonkay/Thesis/FMatrixRegressor.py:347: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(model_path, map_location='cpu')
/home/alonkay/.local/lib/python3.9/site-packages/matplotlib/axes/_axes.py:7037: RuntimeWarning: invalid value encountered in multiply
  boffset = -0.5 * dr * totwidth * (1 - 1 / nx)
tensor([[1.5172e-05, 3.0420e-04, 6.1423e-04, 6.6275e-04, 6.7335e-04, 6.7475e-04,
         6.7475e-04, 7.0450e-04, 8.3647e-04, 8.3647e-04, 1.1651e-03, 1.4322e-03,
         1.4322e-03, 1.4445e-03, 1.4445e-03, 1.5180e-03, 2.6029e-03, 3.0661e-03,
         3.5127e-03, 4.7379e-03, 5.3562e-03, 5.6248e-03, 9.6765e-03, 1.0419e-02,
         1.2949e-02, 1.5197e-02, 2.3643e-02, 2.3944e-02, 2.3944e-02, 2.5059e-02,
         3.3899e-02, 3.4086e-02, 4.0547e-02, 4.2701e-02, 4.4019e-02, 4.4019e-02,
         4.6274e-02, 5.5138e-02, 5.8189e-02, 5.8189e-02, 6.6624e-02, 6.6624e-02,
         6.9250e-02, 8.5705e-02, 8.7922e-02, 8.7922e-02, 8.9293e-02, 8.9293e-02,
         9.2855e-02, 9.2855e-02, 9.6035e-02, 1.0154e-01, 1.0782e-01, 1.1123e-01,
         1.1240e-01, 1.2233e-01, 1.2257e-01, 1.2910e-01, 1.3105e-01, 1.3105e-01,
         1.3545e-01, 1.6057e-01, 1.7142e-01, 1.9287e-01, 1.9702e-01, 2.0334e-01,
         2.0368e-01, 2.0368e-01, 2.2549e-01, 2.2757e-01, 2.2757e-01, 2.3608e-01,
         2.5044e-01, 2.6389e-01, 2.6579e-01, 2.6669e-01, 2.8275e-01, 2.9380e-01,
         2.9383e-01, 3.0487e-01, 3.3545e-01, 3.3853e-01, 3.7220e-01, 3.8038e-01,
         4.1001e-01, 4.1001e-01, 4.3188e-01, 5.2096e-01, 5.7780e-01, 5.8082e-01,
         5.8082e-01, 6.0868e-01, 6.9408e-01, 7.8353e-01, 9.5662e-01, 1.3530e+00,
         1.6707e+00, 2.2947e+00, 1.6034e+01, 1.6034e+01]], device='cuda:0')


tensor([[1.9791e-09, 3.5507e-09, 4.1910e-09, 9.5461e-09, 4.8924e-08, 3.6671e-07,
         4.1921e-07, 4.4750e-07, 7.3580e-07, 7.5910e-07, 7.8278e-07, 8.6101e-07,
         9.8534e-07, 1.2231e-06, 1.3895e-06, 1.3895e-06, 1.6347e-06, 1.6487e-06,
         2.0438e-06, 2.1532e-06, 2.4308e-06, 2.7610e-06, 2.7610e-06, 3.0552e-06,
         4.1146e-06, 4.4951e-06, 4.5639e-06, 4.5639e-06, 4.7034e-06, 4.7620e-06,
         4.8447e-06, 5.1830e-06, 5.2569e-06, 6.3540e-06, 7.1600e-06, 7.2180e-06,
         7.9531e-06, 8.9002e-06, 9.3236e-06, 9.5891e-06, 1.0443e-05, 1.1044e-05,
         1.1451e-05, 1.1699e-05, 1.2372e-05, 1.2909e-05, 1.3143e-05, 1.3143e-05,
         1.3897e-05, 1.4589e-05, 1.5005e-05, 1.5005e-05, 1.5382e-05, 1.5382e-05,
         1.5851e-05, 1.5937e-05, 1.5937e-05, 1.6327e-05, 1.7345e-05, 1.7345e-05,
         1.8302e-05, 1.9569e-05, 2.0732e-05, 2.1626e-05, 2.2538e-05, 2.2538e-05,
         2.2743e-05, 2.3157e-05, 2.3157e-05, 2.3732e-05, 2.4473e-05, 2.5064e-05,
         2.5064e-05, 2.6599e-05, 2.6599e-05, 2.9162e-05, 2.9527e-05, 2.9984e-05,
         2.9984e-05, 3.0043e-05, 3.2701e-05, 3.3884e-05, 3.3884e-05, 3.4010e-05,
         3.7426e-05, 3.7426e-05, 3.7823e-05, 3.8758e-05, 3.9365e-05, 3.9365e-05,
         4.2049e-05, 4.2330e-05, 4.3318e-05, 4.3318e-05, 4.6932e-05, 4.8582e-05,
         4.8883e-05, 4.8883e-05, 4.9034e-05, 4.9337e-05]], device='cuda:0')




## TEST RESULTS: ##
Test Loss: 2.7618621868535506e-05		 Test MAE: 0.002976816892623901
Test Algebraic dist: 2.7682056481187993e-05
Test SED dist: 5.4348463361913504e-05
Test RE1 dist: 1.0324326490075135e-05

Test Algebraic dist truth: 1.8830288948167947e-06
Test SED dist truth: 1.790298979771747e-08
Test RE1 dist truth: 2.2369726860586914e-09


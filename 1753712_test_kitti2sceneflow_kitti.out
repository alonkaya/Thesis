Wed 04 Dec 2024 10:26:03 IST

SLURM_JOBID:		 1753712
SLURM_JOB_NODELIST:	 cs-4090-10 


/home/alonkay/.conda/envs/alon_env/lib/python3.9/site-packages/transformers/utils/generic.py:260: FutureWarning: `torch.utils._pytree._register_pytree_node` is deprecated. Please use `torch.utils._pytree.register_pytree_node` instead.
  torch.utils._pytree._register_pytree_node(
/home/alonkay/.conda/envs/alon_env/lib/python3.9/site-packages/huggingface_hub/file_download.py:797: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
/home/alonkay/.conda/envs/alon_env/lib/python3.9/site-packages/transformers/modeling_utils.py:479: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  return torch.load(checkpoint_file, map_location=map_location)
/cs_storage/alonkay/Thesis/FMatrixRegressor.py:331: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  checkpoint = torch.load(model_path, map_location='cpu')
Epoch 1/10: Test SED dist: 2.241149213977326
Epoch 2/10: Test SED dist: 2.0781426680715462
Epoch 3/10: Test SED dist: 2.1593900981702303
Epoch 4/10: Test SED dist: 2.165709760852326
Epoch 5/10: Test SED dist: 2.089980964373825
Epoch 6/10: Test SED dist: 2.110328387497063
Epoch 7/10: Test SED dist: 2.1163906011366307
Epoch 8/10: Test SED dist: 2.1121229587640977
Epoch 9/10: Test SED dist: 2.1230363200481674
Epoch 10/10: Test SED dist: 2.199647831737547
## TEST RESULTS: ##
Test Loss: 1.0944804944490134		 Test MAE: 0.0618563286960125
Test Algebraic dist: 0.5536551855560532
Test SED dist: 2.139589880462876
Test RE1 dist: 0.3360485134268165

Test Algebraic dist truth: 0.017804328660319623
Test SED dist truth: 0.0017471015453338623
Test RE1 dist truth: 0.00021839115236486708


